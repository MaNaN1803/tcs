from collections import defaultdict
kv, fq, mf, res = {}, defaultdict(set), 0, []
    for op in operations:
        if op[0] == 1:
            k = op[1]
            if k not in kv:
                res.append(-1)
            else:
                v, f = kv[k]
                fq[f].remove(k)
                if not fq[f] and f == mf: mf += 1
                kv[k] = (v, f + 1)
                fq[f + 1].add(k)
                res.append(v)
        else:
            k, v = op[1], op[2]
            if k in kv:
                _, f = kv[k]
                fq[f].remove(k)
                if not fq[f] and f == mf: mf += 1
                kv[k] = (v, f + 1)
                fq[f + 1].add(k)
            else:
                if len(kv) >= N:
                    r = min(fq[mf])
                    fq[mf].remove(r)
                    if not fq[mf]: fq.pop(mf)
                    kv.pop(r)
                kv[k], mf = (v, 1), 1
                fq[1].add(k)
    return res